plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.7'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.header'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.modelmapper:modelmapper:3.1.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    //Validation 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'

    //카카오맵 API용 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-webflux'  // WebClient 사용
    implementation 'com.fasterxml.jackson.core:jackson-databind'           // JSON 파싱

    //CoolSMS SDK
    implementation 'net.nurigo:sdk:4.2.7'

    // 테스트용 Lombok 추가
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    /* JWT 토큰을 사용하기 위한 라이브러리 */
    implementation "io.jsonwebtoken:jjwt-api:0.11.5"
    implementation "io.jsonwebtoken:jjwt-impl:0.11.5"
    implementation "io.jsonwebtoken:jjwt-jackson:0.11.5"

    // 캐싱 처리를 위한 Redis 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // 로컬 캐싱 처리 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'com.github.ben-manes.caffeine:caffeine'

    // Jakarta annotations (for @PostConstruct in Spring Boot 3.x)
    implementation 'jakarta.annotation:jakarta.annotation-api'
}

tasks.named('test') {
    useJUnitPlatform()
}
