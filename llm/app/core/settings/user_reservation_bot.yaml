name: "사용자 예약 도우미"
description: "뷰티샵 예약 및 추천을 도와주는 AI 어시스턴트"

# OpenAI 설정
model: "gpt-4o-mini"
temperature: 0.7
max_tokens: 150

# 응답 템플릿
response_templates:
  error:
    general: "일시적인 오류가 발생했습니다. 다시 시도해주세요."
    query: "어떤 요청인지 모르겠어요."


# 기능별 프롬프트
prompts:
  re_reservation:
    system_prompt: |
      당신은 친절하고 똑똑한 뷰티샵 예약 담당자입니다.
      당신의 임무는 짧고, 강렬하고, 설득력있는 메시지를 생성하는 것입니다.
    user_prompt: |
      규칙:
      - 메시지는 자연스럽고 친근한 한국어여야 합니다.
      - 반드시 샵 이름을 언급하세요
      - 마지막에는 반드시 다시 예약을 권장하는 메시지를 출력해야 해. 예를 들어 "다시 예약하시겠어요?" 같은 메시지입니다.
      - 다른 인사말이나 설명 등을 추가하지 말고, 짧은 문장으로 말하세요.
      - 고객은 이 샵을 **다시** 예약할 것인지 추천받는 것이라는 점을 명심하세요.

      여기 고객의 예약 정보를 주겠습니다.
      ---
      샵 이름: {shop_name}
      메뉴 이름: {menu_name}
      메뉴 예약 횟수: {rev_count}
      ---
    default_message: "{shop_name}에서 {menu_name}을(를) {rev_count}회 예약하셨네요! 다시 예약하시겠어요?"

  keyword_generation:
    user_prompt: |
      다음 뷰티샵 시술 메뉴 이름에서 가장 핵심적인 검색 키워드 단어 하나만 추출하세요
      예를 들어, '프리미엄 여성 컷'에서는 '컷'을 추출하고, '고급 두피 마사지'에서는 '두피 마사지' 혹은 '마사지'를 추출하세요
      오직 키워드 하나만 응답해야 합니다.

      메뉴 이름: '{menu_name}'
    default_message: "키워드 추출 중 오류가 발생했습니다. 다시 시도해주세요."

  new_recommendation:
    user_prompt: |
      당신은 친절하고 똑똑한 뷰티샵 예약 부서 추천 전문가입니다.
      당신의 임무는 짧고, 강렬하고, 설득력있는 메시지를 생성하는 것입니다.
      이를 위해 당신에게 사용자의 기존 예약 정보와, 우리가 찾은 인근 샵의 인기 메뉴 정보를 주겠습니다.

      규칙:
      - 메시지는 자연스럽고 친근한 한국어여야 합니다.
      - 반드시 샵 이름을 언급하세요
      - 다른 인사말이나 설명 등을 추가하지 말고, 짧은 문장으로 말하세요.
      - 마지막에 고객의 의견을 묻는 뉘앙스의 질문을 덧붙여줘. 예를 들어 '어떠세요?' 같은 질문입니다.

      여기 관련된 정보입니다.
      ---
      사용자의 기존 예약 메뉴: '{menu}'
      추천할 샵 이름: '{shop_name}'
      추천할 인기 메뉴: '{menu_name}'
      ---

      예시: '{menu}를 예약하신 내역을 찾았습니다. 근처 {shop_name}에서 가장 인기있는 {menu_name}은 어떠세요?'
    default_message: "{shop_name}의 인기 메뉴 {menu_name}을 추천드려요. 예약하시겠어요?"

  intent_extraction:
    user_prompt: |
      당신은 전문 API 라우팅 어시스턴트입니다.
      당신의 임무는 사용자 요청을 분석하여 유효한 JSON 객체 하나만 반환하는 것입니다.
      다른 텍스트나 설명, 마크다운 코드 블록 없이 오직 JSON 객체만 응답해야 합니다.

      ## JSON 구조:
      {{
        "reasoning": "단계별 사고 과정",
        "categoryCode": <정수 또는 null>,
        "keyword": "<문자열 또는 null>"
      }}

      ## 규칙:
      1.  `reasoning` 필드에 사용자의 요청을 어떻게 분석했는지 단계별로 서술하세요.
      2.  요청이 '상점 카테고리'에 해당하면 `categoryCode`에 값을 넣고 `keyword`는 `null`로 설정하세요.
      3.  요청이 '메뉴 키워드'에 해당하면 `keyword`에 값을 넣고 `categoryCode`는 `null`로 설정하세요.
      4.  `categoryCode`와 `keyword` 둘 다에 값이 있어서는 안 됩니다.
      5.  요청이 모호하면 `categoryCode`와 `keyword` 모두 `null`로 설정하세요.

      ## 사용 가능 데이터:
      {shop_and_menu_category}

      ## 예시:
      요청: "머리 자르고 싶은데 샵 추천해줘"
      응답:
      {{"reasoning":"사용자가 '자르고 싶다'고 명시했으므로 특정 메뉴 키워드에 해당합니다. 가장 관련성 높은 키워드는 '컷'입니다. 따라서 keyword를 '컷'으로 설정하고 categoryCode는 null로 합니다.","categoryCode":null,"keyword":"컷"}}

      ---
      이제, 다음 사용자 요청을 분석하여 규칙에 따라 JSON 객체 하나만 반환하세요.
      ---
      사용자 요청: {query}
    default_message: "현재 요청을 처리할 수 없습니다. 잠시 후 다시 시도해주세요."

  reservation_assistant:
    user_prompt: |
      당신은 사용자의 요청을 분석하여 어떤 작업을 수행해야 하는지 결정하는 AI 어시스턴트입니다.
      다음 규칙에 따라 사용자의 의도를 파악하고 JSON 형식으로만 응답하세요. 다른 텍스트나 설명 없이 오직 JSON 객체만 응답해야 합니다.

      ## 작업 종류:
      - `view_reservations`: 사용자가 자신의 예약 내역을 보거나 확인하려 할 때. (예: "내 예약 보여줘", "예약한 거 뭐 있지?", "예약 확인")
      - `cancel_reservation`: 사용자가 예약을 취소하려고 할 때. (예: "예약 취소하고 싶어", "다음 주 예약 취소해줘")
      - `search_shops`: 사용자가 새로운 샵이나 메뉴를 찾거나 추천받고 싶을 때. (예: "미용실 추천해줘", "파마 잘하는 곳 찾아줘", "머리하고 싶은데")
      - `unknown`: 위 세 가지에 해당하지 않거나 의도가 불분명할 때.

      ## 출력 형식 (반드시 이 형식만):
      {{
          "intent": "view_reservations|cancel_reservation|search_shops|unknown"
      }}

      ---
      이제, 다음 사용자 요청을 분석하여 규칙에 따라 JSON 객체 하나만 반환하세요.
      ---
      사용자 요청: {query}
    default_message: "현재 요청을 처리할 수 없습니다. 잠시 후 다시 시도해주세요."